{"version":3,"sources":["utils/message.ts","flux/actions/cart.ts","api/cart.ts","flux/reducers/cart.ts","flux/actions/good.ts","api/good.ts","flux/reducers/good.ts","flux/reducers/index.ts","flux/index.ts","components/common/Button/index.tsx","components/common/Card/index.tsx","components/GoodCart/index.tsx","pages/Cart/index.tsx","components/AddGood/index.tsx","components/Good/index.tsx","components/Navbar/index.tsx","pages/Goods/index.tsx","containers/Cart.tsx","containers/Good.tsx","containers/Navbar.tsx","App.tsx","index.tsx"],"names":["messageSuccess","text","message","success","goods","type","good","id","instance","axios","create","baseURL","withCredentials","headers","get","then","res","data","post","delete","initialState","name","price","quantity","put","combineReducers","cart","state","action","filter","g","map","c","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","rootReducer","applyMiddleware","thunk","_store","Button","children","htmlType","className","size","onClick","rounded","cn","MyCard","title","actions","Good","deletetGood","key","Cart","goodsData","GoodCart","GoodSchema","Yup","shape","required","AddGood","createGood","initialValues","validationSchema","onSubmit","values","resetForm","handleChange","errors","touched","handleBlur","handleSubmit","isSubmitting","placeholder","onChange","onBlur","value","incrementGood","addToCard","Navabar","goodsQuantity","to","React","memo","connect","getGoods","dispatch","a","api","props","useEffect","priceNumber","parseInt","quantityNumber","length","App","exact","path","render","ReactDOM","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d9f07356.chunk.js","sourcesContent":["import { message } from \"antd\";\r\n\r\nexport const messageSuccess = (text: string) => message.success(text);\r\n","import { IGood } from \"../../api/good\";\r\n\r\nexport default {\r\n  getGoods: (goods: Array<IGood>) => ({ type: \"CART/GET_GOODS\", goods } as const),\r\n  addGood: (good: IGood) => ({ type: \"CART/ADD_GOOD\", good } as const),\r\n  deleteGood: (id: number) => ({ type: \"CART/DELETE_GOOD\", id } as const),\r\n};\r\n","import axios from \"axios\";\r\n\r\nimport { IGood } from \"./good\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: \"https://my-json-server.typicode.com/AlesssArver/react-shopping-cart/cart\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default {\r\n  getGoods: () => {\r\n    return instance.get<Array<IGood>>(`/`).then((res) => res.data);\r\n  },\r\n  addGood: (good: IGood) => {\r\n    return instance\r\n      .post<Array<IGood>>(`/`, { ...good })\r\n      .then((res) => res.data);\r\n  },\r\n  deleteGood(id: number) {\r\n    return instance.delete(`${id}`).then((res) => res.data);\r\n  },\r\n};\r\n","import { InferActionsTypes, ThunkType } from \"../index\";\r\nimport { messageSuccess } from \"../../utils/message\";\r\nimport action from \"../actions/cart\";\r\nimport { IGood } from \"../../api/good\";\r\nimport api from \"../../api/cart\";\r\n\r\nconst initialState = {\r\n  goods: [] as Array<IGood>,\r\n};\r\ntype IState = typeof initialState;\r\ntype IActions = InferActionsTypes<typeof action>;\r\ntype T = ThunkType<IActions>;\r\n\r\nexport default (state = initialState, action: IActions): IState => {\r\n  switch (action.type) {\r\n    case \"CART/GET_GOODS\":\r\n      return {\r\n        ...state,\r\n        goods: action.goods,\r\n      };\r\n    case \"CART/ADD_GOOD\":\r\n      return {\r\n        ...state,\r\n        goods: [...state.goods, action.good],\r\n      };\r\n    case \"CART/DELETE_GOOD\":\r\n      return {\r\n        ...state,\r\n        goods: state.goods.filter((g) => g.id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getGoods = (): T => async (dispatch) => {\r\n  const data = await api.getGoods();\r\n  dispatch(action.getGoods(data));\r\n};\r\nexport const addGood = (good: IGood): T => async (dispatch) => {\r\n  await api.addGood(good);\r\n  dispatch(action.addGood(good));\r\n  messageSuccess(\"Good was added in cart\");\r\n};\r\nexport const deletetGood = (id: number): T => async (dispatch) => {\r\n  await api.deleteGood(id);\r\n  dispatch(action.deleteGood(id));\r\n  messageSuccess(\"Good was deleted from cart\");\r\n};\r\n","import { IGood } from \"../../api/good\";\r\n\r\nexport default {\r\n  getGoods: (goods: Array<IGood>) =>\r\n    ({ type: \"GOOD/GET_GOODS\", goods } as const),\r\n  createGood: (good: IGood) => ({ type: \"GOOD/CREATE_GOOD\", good } as const),\r\n  incrementGood: (good: IGood) =>\r\n    ({\r\n      type: \"GOOD/INCREMENT_GOOD\",\r\n      good,\r\n    } as const),\r\n  deleteGood: (id: number) => ({ type: \"GOOD/DELETE_GOOD\", id } as const),\r\n};\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n  baseURL: \"https://my-json-server.typicode.com/AlesssArver/react-shopping-cart/goods\",\r\n  withCredentials: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport type IGood = {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n};\r\n\r\nexport default {\r\n  getGoods: () => {\r\n    return instance\r\n      .get<Array<IGood>>(`?_sort=id&_order=desc`)\r\n      .then((res) => res.data);\r\n  },\r\n  createGood: (name: string, price: number, quantity: number) => {\r\n    return instance\r\n      .post(`/`, { name, price, quantity })\r\n      .then((res) => res.data);\r\n  },\r\n  incrementGood: (\r\n    id: number,\r\n    name: string,\r\n    price: number,\r\n    quantity: number\r\n  ) => {\r\n    return instance\r\n      .put(`${id}`, { name, price, quantity })\r\n      .then((res) => res.data);\r\n  },\r\n  deleteGood(id: number) {\r\n    return instance.delete(`${id}`).then((res) => res.data);\r\n  },\r\n};\r\n","import { InferActionsTypes, ThunkType } from \"../index\";\r\nimport { messageSuccess } from \"../../utils/message\";\r\nimport action from \"../actions/good\";\r\nimport api, { IGood } from \"../../api/good\";\r\n\r\nconst initialState = {\r\n  goods: [] as Array<IGood>,\r\n};\r\ntype IState = typeof initialState;\r\ntype IActions = InferActionsTypes<typeof action>;\r\ntype T = ThunkType<IActions>;\r\n\r\nexport default (state = initialState, action: IActions): IState => {\r\n  switch (action.type) {\r\n    case \"GOOD/GET_GOODS\":\r\n      return {\r\n        ...state,\r\n        goods: action.goods,\r\n      };\r\n    case \"GOOD/CREATE_GOOD\":\r\n      return {\r\n        ...state,\r\n        goods: [action.good, ...state.goods],\r\n      };\r\n    case \"GOOD/INCREMENT_GOOD\":\r\n      return {\r\n        ...state,\r\n        goods: state.goods.map((g) => {\r\n          if (g.id === action.good.id)\r\n            return {\r\n              ...g,\r\n              name: action.good.name,\r\n              price: action.good.price,\r\n              quantity: action.good.quantity,\r\n            };\r\n          return g;\r\n        }),\r\n      };\r\n    case \"GOOD/DELETE_GOOD\":\r\n      return {\r\n        ...state,\r\n        goods: state.goods.filter((c) => c.id !== action.id),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const getGoods = (): T => async (dispatch) => {\r\n  const data = await api.getGoods();\r\n  dispatch(action.getGoods(data));\r\n};\r\nexport const createGood = (\r\n  name: string,\r\n  price: string,\r\n  quantity: string\r\n): T => async (dispatch) => {\r\n  const priceNumber = parseInt(price);\r\n  const quantityNumber = parseInt(quantity);\r\n  const data = await api.createGood(name, priceNumber, quantityNumber);\r\n  dispatch(action.createGood({ ...data }));\r\n  messageSuccess(\"Good was added\");\r\n};\r\nexport const incrementGood = (good: IGood): T => async (dispatch) => {\r\n  const data = await api.incrementGood(\r\n    good.id,\r\n    good.name,\r\n    good.price,\r\n    good.quantity\r\n  );\r\n  dispatch(action.incrementGood(data));\r\n};\r\nexport const deletetGood = (id: number): T => async (dispatch) => {\r\n  await api.deleteGood(id);\r\n  dispatch(action.deleteGood(id));\r\n  messageSuccess(\"Good was deleted\");\r\n};\r\n","import { combineReducers } from \"redux\";\r\n\r\nimport cart from \"./cart\";\r\nimport good from \"./good\";\r\n\r\nexport default combineReducers({ cart, good });\r\n","import { Action, applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk, { ThunkAction } from \"redux-thunk\";\r\n\r\nimport rootReducer from \"./reducers\";\r\n\r\ntype RootReducerType = typeof rootReducer;\r\nexport type IRootState = ReturnType<RootReducerType>;\r\nexport type InferActionsTypes<T> = T extends {\r\n  [key: string]: (...args: any[]) => infer U;\r\n}\r\n  ? U\r\n  : never;\r\nexport type ThunkType<A extends Action, R = Promise<void>> = ThunkAction<\r\n  R,\r\n  IRootState,\r\n  unknown,\r\n  A\r\n>;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n  rootReducer,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n// @ts-ignore\r\nwindow._store = store;\r\n\r\nexport default store;\r\n","import React, { FC } from \"react\";\r\nimport { Button as BaseButton } from \"antd\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./index.sass\";\r\n\r\ntype IProps = {\r\n  children: React.ReactNode;\r\n  type?: \"link\" | \"text\" | \"ghost\" | \"default\" | \"primary\" | \"dashed\";\r\n  htmlType?: \"button\" | \"submit\" | \"reset\";\r\n  onClick?: (e: React.MouseEvent<HTMLElement>) => void;\r\n  className?: string;\r\n  size?: string;\r\n  rounded?: boolean;\r\n};\r\n\r\nconst Button: FC<IProps> = ({\r\n  children,\r\n  type,\r\n  htmlType,\r\n  className,\r\n  size,\r\n  onClick,\r\n  rounded,\r\n}) => (\r\n  <BaseButton\r\n    onClick={onClick}\r\n    className={cn(\"button\", className, {\r\n      \"button--large\": size === \"large\",\r\n      \"button--medium\": size === \"medium\",\r\n      \"button--small\": size === \"small\",\r\n      \"button--rounded\": rounded,\r\n    })}\r\n    type={type}\r\n    htmlType={htmlType}\r\n  >\r\n    {children}\r\n  </BaseButton>\r\n);\r\nexport default Button;\r\n","import React, { FC } from \"react\";\r\nimport { Card } from \"antd\";\r\nimport cn from \"classnames\";\r\n\r\nimport \"./index.sass\";\r\n\r\ntype IProps = {\r\n  children: React.ReactNode;\r\n  className?: string;\r\n  title?: string;\r\n  actions?: Array<any>;\r\n};\r\nconst MyCard: FC<IProps> = ({ children, className, title, actions }) => {\r\n  return (\r\n    <Card title={title} className={cn('card', className)} actions={actions}>\r\n      {children}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MyCard;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { Card, Button } from \"../common\";\r\n\r\ntype IProps = {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  deletetGood: (id: number) => void;\r\n};\r\n\r\nconst Good: FC<IProps> = ({ id, name, price, quantity, deletetGood }) => {\r\n  const onDeleteGood = () => deletetGood(id)\r\n\r\n  return (\r\n    <Card title={name} actions={[<Button onClick={onDeleteGood}className=\"button--danger\" key=\"delete\">Delete</Button>]}>\r\n      <ul>\r\n        <li>price: {price}$</li>\r\n        <li>puantity: {quantity}</li>\r\n      </ul>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Good;\r\n","import React, { FC } from \"react\";\r\n\r\nimport { IGood } from \"../../api/good\";\r\n\r\nimport \"./index.sass\";\r\n\r\nimport GoodCart from \"../../components/GoodCart\";\r\n\r\ntype IProps = {\r\n  goods: Array<IGood>;\r\n  deletetGood: (id: number) => void;\r\n};\r\nconst Cart: FC<IProps> = ({ goods, deletetGood }) => {\r\n  const goodsData = goods.map((g) => <GoodCart {...g} key={g.id} deletetGood={deletetGood}/>);\r\n\r\n  return (\r\n    <div className=\"goods__wrapper\">\r\n      <div className=\"page__title\">\r\n        <h1>Cart</h1>\r\n      </div>\r\n      <div className=\"goods\">{goodsData}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cart;\r\n","import React, { FC } from \"react\";\r\nimport { Formik } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { Card, Input } from \"antd\";\r\n\r\nimport { IGood } from \"../../api/good\";\r\n\r\nimport { Button } from \"../../components/common\";\r\n\r\nimport \"./index.sass\";\r\n\r\ntype IProps = {\r\n  createGood: (name: string, price: string, quantity: string) => void;\r\n};\r\ntype IForm = {\r\n  name: string;\r\n  price: string;\r\n  quantity: string;\r\n};\r\nconst GoodSchema = Yup.object().shape({\r\n  name: Yup.string().required(\"Name is required\"),\r\n  price: Yup.string().required(\"Price is required\"),\r\n  quantity: Yup.string().required(\"Quantity is required\"),\r\n});\r\n\r\nconst AddGood: FC<IProps> = ({ createGood }) => {\r\n  const initialValues: IForm = { name: \"\", price: \"\", quantity: \"\" };\r\n  return (\r\n    <Card className=\"add-good--card\">\r\n      <Formik\r\n        initialValues={initialValues}\r\n        validationSchema={GoodSchema}\r\n        onSubmit={(values: IForm, { resetForm }) => {\r\n          createGood(values.name, values.price, values.quantity);\r\n          resetForm();\r\n        }}\r\n      >\r\n        {({\r\n          values,\r\n          errors,\r\n          touched,\r\n          handleChange,\r\n          handleBlur,\r\n          handleSubmit,\r\n          isSubmitting,\r\n        }) => (\r\n          <form className=\"add-good--form\" onSubmit={handleSubmit}>\r\n            <div className=\"field\">\r\n              <Input\r\n                name=\"name\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.name}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <Input\r\n                name=\"price\"\r\n                placeholder=\"Price\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.price}\r\n              />\r\n            </div>\r\n            <div className=\"field\">\r\n              <Input\r\n                name=\"quantity\"\r\n                placeholder=\"Quantity\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.quantity}\r\n              />\r\n            </div>\r\n            <div>\r\n              <Button type=\"primary\" htmlType=\"submit\">\r\n                Create\r\n              </Button>\r\n            </div>\r\n          </form>\r\n        )}\r\n      </Formik>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddGood;\r\n","import React, { FC } from \"react\";\r\n\r\nimport \"./index.sass\";\r\n\r\nimport { IGood } from \"../../api/good\";\r\n\r\nimport { Button, Card } from \"../common\";\r\n\r\ntype IProps = {\r\n  id: number;\r\n  name: string;\r\n  price: number;\r\n  quantity: number;\r\n  incrementGood: (good: IGood) => void;\r\n  deletetGood: (id: number) => void;\r\n  addToCard: (good: IGood) => void;\r\n};\r\n\r\nconst Good: FC<IProps> = ({\r\n  id,\r\n  name,\r\n  price,\r\n  quantity,\r\n  incrementGood,\r\n  deletetGood,\r\n  addToCard,\r\n}) => {\r\n  const onIncrement = () =>\r\n    incrementGood({ id, name, price, quantity: quantity += 1 });\r\n  const onDecrement = () =>\r\n    incrementGood({ id, name, price, quantity: quantity -= 1 });\r\n\r\n  const onAddToCard = () => addToCard({ id, name, price, quantity });\r\n\r\n  return (\r\n    <Card className=\"good-card\" title={name}>\r\n      <ul>\r\n        <li>price: {price}$</li>\r\n        <li>puantity: {quantity}</li>\r\n      </ul>\r\n      <div className=\"buttons__wrapper\">\r\n        <Button onClick={onDecrement} size=\"small\">\r\n          -\r\n        </Button>\r\n        <Button onClick={onIncrement} size=\"small\">\r\n          +\r\n        </Button>\r\n      </div>\r\n      <Button className=\"good-card--button\" onClick={onAddToCard}>\r\n        Add to Cart\r\n      </Button>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Good;\r\n","import React, { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Typography } from \"antd\";\r\n\r\nimport \"./index.sass\";\r\n\r\ntype IProps = { goodsQuantity: number };\r\nconst Navabar: FC<IProps> = ({ goodsQuantity }) => {\r\n  return (\r\n    <div className=\"navbar__wrapper\">\r\n      <div className=\"navbar\">\r\n        <Link to=\"/goods\" className=\"link\">\r\n        <Typography>Товары</Typography>\r\n      </Link>\r\n      <Link to=\"/cart\" className=\"link\">\r\n        <Typography>Корзина {goodsQuantity}</Typography>\r\n      </Link></div> \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navabar;\r\n","import React, { FC } from \"react\";\r\n\r\nimport \"./index.sass\";\r\n\r\nimport { IGood } from \"../../api/good\";\r\n\r\nimport { Good, AddGood } from \"../../components\";\r\n\r\ntype IProps = {\r\n  goods: Array<IGood>;\r\n  createGood: (name: string, price: string, quantity: string) => void;\r\n  incrementGood: (good: IGood) => void;\r\n  deletetGood: (id: number) => void;\r\n  addToCard: (good: IGood) => void;\r\n};\r\nconst Goods: FC<IProps> = ({\r\n  goods,\r\n  createGood,\r\n  incrementGood,\r\n  deletetGood,\r\n  addToCard,\r\n}) => {\r\n  const goodsData = goods.map((g) => (\r\n    <Good\r\n      {...g}\r\n      key={g.id}\r\n      incrementGood={incrementGood}\r\n      deletetGood={deletetGood}\r\n      addToCard={addToCard}\r\n    />\r\n  ));\r\n\r\n  return (\r\n    <div className=\"goods__wrapper\">\r\n      <div className=\"page__title\">\r\n        <h1>Goods</h1>\r\n      </div>\r\n      <AddGood createGood={createGood} />\r\n      <div className=\"goods\">{goodsData}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Goods);\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IGood } from \"../api/good\";\r\nimport { IRootState } from \"../flux\";\r\nimport { getGoods, deletetGood } from \"../flux/reducers/cart\";\r\n\r\nimport { Cart } from \"../pages\";\r\n\r\nconst ContactsContainer: FC<IMapStateToProps & IMapDispatchToProps> = (\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    const getGoodsData = () => props.getGoods();\r\n    getGoodsData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Cart goods={props.goods} deletetGood={props.deletetGood}/>\r\n    </>\r\n  );\r\n};\r\n\r\ntype IMapStateToProps = {\r\n  goods: Array<IGood>;\r\n};\r\ntype IMapDispatchToProps = {\r\n  getGoods: () => void;\r\n  deletetGood: (id: number) => void;\r\n};\r\nconst MapStateToProps = (state: IRootState): IMapStateToProps => ({\r\n  goods: state.cart.goods,\r\n});\r\nexport default connect(MapStateToProps, {\r\n  getGoods, deletetGood\r\n})(ContactsContainer);\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IGood } from \"../api/good\";\r\nimport { IRootState } from \"../flux\";\r\nimport {\r\n  getGoods,\r\n  createGood,\r\n  incrementGood,\r\n  deletetGood,\r\n} from \"../flux/reducers/good\";\r\nimport { addGood } from \"../flux/reducers/cart\";\r\n\r\nimport { Goods } from \"../pages\";\r\n\r\nconst ContactsContainer: FC<IMapStateToProps & IMapDispatchToProps> = (\r\n  props\r\n) => {\r\n  useEffect(() => {\r\n    const getGoodsData = () => props.getGoods();\r\n    getGoodsData();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <Goods\r\n        goods={props.goods}\r\n        createGood={props.createGood}\r\n        incrementGood={props.incrementGood}\r\n        deletetGood={props.deletetGood}\r\n        addToCard={props.addToCard}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\ntype IMapStateToProps = {\r\n  goods: Array<IGood>;\r\n};\r\ntype IMapDispatchToProps = {\r\n  getGoods: () => void;\r\n  createGood: (name: string, price: string, quantity: string) => void;\r\n  incrementGood: (good: IGood) => void;\r\n  deletetGood: (id: number) => void;\r\n  addToCard: (good: IGood) => void;\r\n};\r\nconst MapStateToProps = (state: IRootState): IMapStateToProps => ({\r\n  goods: state.good.goods,\r\n});\r\nexport default connect(MapStateToProps, {\r\n  getGoods,\r\n  createGood,\r\n  incrementGood,\r\n  deletetGood,\r\n  addToCard: addGood,\r\n})(ContactsContainer);\r\n","import React, { FC } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { IGood } from \"../api/good\";\r\nimport { IRootState } from \"../flux\";\r\n\r\nimport { Navbar } from \"../components\";\r\n\r\nconst NavbarContainer: FC<IMapStateToProps> = ({ goods }) => {\r\n  return (\r\n    <>\r\n      <Navbar goodsQuantity={goods.length} />\r\n    </>\r\n  );\r\n};\r\n\r\ntype IMapStateToProps = {\r\n  goods: Array<IGood>;\r\n};\r\nconst MapStateToProps = (state: IRootState): IMapStateToProps => ({\r\n  goods: state.cart.goods,\r\n});\r\nexport default connect(MapStateToProps)(NavbarContainer);\r\n","import React from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\n\nimport CartContainer from \"./containers/Cart\";\nimport GoodsContainer from \"./containers/Good\";\nimport NavbarContainer from \"./containers/Navbar\";\n\nconst App = () => {\n  return (\n    <div className=\"main__container\">\n      <NavbarContainer />\n      <Route exact path=\"/\" render={() => <Redirect to=\"/goods\" />} />\n      <Route path=\"/cart\" render={() => <CartContainer />} />\n      <Route path=\"/goods\" render={() => <GoodsContainer />} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\n\nimport store from \"./flux\";\n\nimport \"./assets/styles/index.sass\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}